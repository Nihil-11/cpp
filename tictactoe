#include <iostream>
#include <string>
#include <limits>

using namespace std;

void display_fields(char fields[]) { // вывод полей
    cout << endl;
    for (int i = 0; i < 9; i++) {
        if (i == 3 || i == 6) {
            cout << endl;
            cout << "----------";
            cout << endl;
        }

        cout << fields[i];

        if (i != 2 && i != 5 && i != 8) {
            cout << " | ";
        } 
    }
    cout << endl;
    cout << endl;
}

void new_move(char fields[], char player) { // новый ход
    int field;
    bool not_entered = true;

    while (not_entered) {
        cout << player << " move: ";
        cin >> field;
        // проверка на корректность ввода и не занято ли поле
        if (cin.fail() || field < 1 || field > 9 || fields[field - 1] == 'X' || fields[field - 1] == 'O') {
            cout << endl << "Invalid input or field is occupied. Try again" << endl << endl;
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n'); 
        } else {
            fields[field - 1] = player;
            not_entered = false;
        }
    }
}

void display_winner(char player) { 
    cout << "-------------" << endl;
    cout << "   " << player << " wins!" << endl;
    cout << "-------------" << endl;
}

bool check_winner(char fields[], char player) {
    // варианты победы
    int wins[8][3] = {{0, 1, 2}, {3, 4, 5}, {6, 7, 8}, {0, 3, 6}, {1, 4, 7}, {2, 5, 8}, {0, 4, 8}, {2, 4, 6}};

    for (int i = 0; i < 8; i++) {
        int a = wins[i][0]; // 0 элемент в победной комбинации
        int b = wins[i][1]; // 1 элемент в победной комбинации
        int c = wins[i][2]; // 2 элемент в победной комбинации

        if (fields[a] == player && fields[b] == player && fields[c] == player) {
            return true;
        }
    }

    return false;
}

int main() {
    char fields[9] = {'1', '2', '3', '4', '5', '6', '7', '8', '9'};
    int move = 0; // четный ход - крестик, нечетный - нолик
    char player; 

    cout << endl << "----- TIC TAC TOE -----" << endl;

    while (move < 9) {
        if (move % 2 == 0) { 
            player = 'X';
        } else {
            player = 'O';
        }

        display_fields(fields); // выводит поля
        new_move(fields, player); // запрос нового хода
        if (move > 3) {
            if (check_winner(fields, player)) { // проверка на победителя
                display_fields(fields);
                display_winner(player);
                break;
            } 
        }
        move++; // след. ход если игра не завершена
    }

    if (move == 9) { // после 8 хода объявляется ничья
        display_fields(fields);
        cout << "-----------" << endl;
        cout << "   " << "Draw!" << endl;
        cout << "-----------" << endl;
    }

    return 0;
}
