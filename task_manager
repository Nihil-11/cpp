
#include <iostream>
using namespace std;

bool run = true; // флаг

void display_tasks(string tasks[10], bool exist[10], bool completed[10], int& n) { // вывод списка задач
    if (n == 0) {
        cout << "No tasks yet" << endl;
    }
    else {
        cout << "Your tasks: " << endl;
        
        for (int i = 0; i < n; i++) {
            if (exist[i] == true) { // выводит только существующие задачи
                cout << i + 1 << ". " << tasks[i] << " ";
            }
            if (completed[i] == true) { // проверка на отметку
                cout << "[✔]" ;
            }
            cout << endl;
        }
        cout << endl;
    }
    
}

void add_task(string tasks[10], bool exist[10], int& n) { // добавить задачу
    string task;
    
    if (n < 10) { // лимит задач: 10
        cout << "Enter the task: ";
        cin.ignore();
        getline(cin, task);
        tasks[n] = task;
        exist[n] = true; // задача отмечается как существующая
        n += 1; // увеличиваю счетчик
    }
    else {
        cout << "Task limit reached (10 tasks)" << endl;
    }
    
}

void delete_task(bool exist[10], bool completed[10], int& n) { // удалить последнюю задачу
    if (n > 0) {
        exist[n - 1] = false; // помечает последнюю задачу как несуществующую
        completed[n - 1] = false; // аналогично с отметкой
        n -= 1; // уменьшаю счетчик
    }
    else {
        cout << "No tasks to delete" << endl;
    }
}

void mark_as_completed(bool exist[10], bool completed[10], int& n) { // пометить задачу как выполненную 
    int number;
    
    if (n == 0) {
        cout << "No tasks to mark" << endl;
    }
    else {
        cout << "Mark as completed task №: ";
        cin >> number;
        
        if (cin.fail() || number < 1 || number > n) {
            cout << "Error. Wrong number" << endl;
        }
        else if (exist[number - 1] == false) {
            cout << "No such task with this number" << endl;
        }
        else {
            completed[number - 1] = true;
        }
    }
}

void menu(string tasks[10], bool exist[10], bool completed[10], int& n) { // меню
    
    int choice;
    cout << "----------------------------" << endl;
    cout << "1. Show all tasks" << endl;
    cout << "2. Add new task" << endl;
    cout << "3. Delete last task" << endl;
    cout << "4. Mark task as completed" << endl;
    cout << "0. Exit" << endl;
    cout << " Choice: ";
    cin >> choice;
    cout << "----------------------------" << endl;
    
    if (cin.fail()) {
        cout << "Error. Wrong choice" << endl;
        run = false;
    }
    else {
        switch (choice) {
            case 1:
                display_tasks(tasks, exist, completed, n);
                break;
            case 2:
                add_task(tasks, exist, n);
                break;
            case 3:
                delete_task(exist, completed, n);
                break;
            case 4:
                mark_as_completed(exist, completed, n);
                break;
            case 0:
                cout << "Exit complete" << endl;
                run = false;
                break;
            
            default:
                cout << "Error. Wrong choice" << endl;
                run = false;
                break;
        }
    }
    
}

int main() {

    int n = 0; // счетчик задач
    string tasks[10]; // лимит задач: 10
    bool exist[10] = {false}; // существующие задачи
    bool completed[10] = {false}; // пометка "выполнено/не выполнено"

    
    while (run) { // основной цикл программы
        menu(tasks, exist, completed, n);
    }

    return 0;
}
